// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.
////
/// @author roydukkey
/// @group api
////

@use 'sass:meta'
@use 'sass:string'
@use 'sass-exception/src/exception/parameter-type'
@use 'sass-exception/src/exception/validate-index'
@use 'index'


///
/// Returns the last index at which a specified substring can be found in a string; otherwise, 0 is returned, indicating the substring is not present. The string is searched forwards, ending at a given index when specified.
///
/// @param {String} $string - The source string in which the substring is to be located.
/// @param {String} $substring - The substring to locate in the source string.
/// @param {Number} $end-at [1] - The index at which to end the search. A negative index can be used, indicating an offset from the end of the source string.
/// @return {Number}
///
/// @throw `#{$string|$substring}` is not a string.
/// @throw `#{$end-at}` is not a number.
///
/// @access public
/// @require index.index
/// @require parameter-type.parameter-type
/// @require validate-index.validate-index
///
@function last-index($string, $substring, $end-at: -1)

	@if meta.type-of($string) != 'string'
		@error parameter-type.parameter-type('last-index', 'string', $string, 'string')

	@if meta.type-of($substring) != 'string'
		@error parameter-type.parameter-type('last-index', 'substring', $substring, 'string')

	$end-at: validate-index.validate-index('last-index', 'end-at', $end-at, $string)

	@if meta.type-of($end-at) != 'number'
		@error $end-at

	$string: string.slice($string, 1, $end-at)
	$result: index.index($string, $substring)
	$next-index: $result
	$length: string.length($string)

	@while $next-index > 0 and $next-index <= $length
		$result: $next-index
		$next-index: index.index($string, $substring, $result + 1)

	@return $result
