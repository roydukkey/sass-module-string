// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.
////
/// @author roydukkey
/// @group api
////

@use 'sass:meta'
@use 'sass:string'
@use 'sass-exception/src/exception/parameter-type' as parameter-type
@use 'sass-exception/src/exception/validate-index' as validate-index


///
/// Returns the first index at which a specified substring can be found in a string; otherwise, 0 is returned, indicating the substring is not present.
///
/// @param {String} $string - The source string in which the substring is to be located.
/// @param {String} $substring - The substring to locate in the source string.
/// @param {Number} $from-index [1] - The index at which to begin the search. A negative index can be used, indicating an offset from the end of the source string.
/// @return {Number}
///
/// @throw `#{$string|$substring}` is not a string.
/// @throw `#{$from-index}` is not a number.
///
/// @access public
/// @require parameter-type.parameter-type
/// @require validate-index.validate-index
///
@function index($string, $substring, $from-index: 1)

	@if meta.type-of($string) != 'string'
		@error parameter-type.parameter-type('index', 'string', $string, 'string')

	@if meta.type-of($substring) != 'string'
		@error parameter-type.parameter-type('index', 'substring', $substring, 'string')

	$from-index: validate-index.validate-index('index', 'from-index', $from-index, $string)

	@if meta.type-of($from-index) != 'number'
		@error $from-index

	@if $from-index < string.length($string) * -1
		$from-index: 1

	$string: string.index(string.slice($string, $from-index), $substring)

	@return if($string, $string + $from-index - 1, 0)

